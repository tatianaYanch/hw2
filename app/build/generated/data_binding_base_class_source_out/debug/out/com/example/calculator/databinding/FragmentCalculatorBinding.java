// Generated by view binder compiler. Do not edit!
package com.example.calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.calculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCalculatorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonClean;

  @NonNull
  public final Button buttonDivide;

  @NonNull
  public final Button buttonDot;

  @NonNull
  public final Button buttonEight;

  @NonNull
  public final Button buttonEqual;

  @NonNull
  public final Button buttonFive;

  @NonNull
  public final Button buttonFour;

  @NonNull
  public final Button buttonMinus;

  @NonNull
  public final Button buttonMultiply;

  @NonNull
  public final Button buttonNine;

  @NonNull
  public final Button buttonOne;

  @NonNull
  public final Button buttonPlus;

  @NonNull
  public final Button buttonSeven;

  @NonNull
  public final Button buttonSix;

  @NonNull
  public final Button buttonThree;

  @NonNull
  public final Button buttonTwo;

  @NonNull
  public final Button buttonZero;

  @NonNull
  public final TableRow fifthRow;

  @NonNull
  public final TableRow firstRow;

  @NonNull
  public final TableRow fourthRow;

  @NonNull
  public final TableRow secondRow;

  @NonNull
  public final TextView textOperation;

  @NonNull
  public final TextView textResult;

  @NonNull
  public final TableRow thirdRow;

  private FragmentCalculatorBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonClean,
      @NonNull Button buttonDivide, @NonNull Button buttonDot, @NonNull Button buttonEight,
      @NonNull Button buttonEqual, @NonNull Button buttonFive, @NonNull Button buttonFour,
      @NonNull Button buttonMinus, @NonNull Button buttonMultiply, @NonNull Button buttonNine,
      @NonNull Button buttonOne, @NonNull Button buttonPlus, @NonNull Button buttonSeven,
      @NonNull Button buttonSix, @NonNull Button buttonThree, @NonNull Button buttonTwo,
      @NonNull Button buttonZero, @NonNull TableRow fifthRow, @NonNull TableRow firstRow,
      @NonNull TableRow fourthRow, @NonNull TableRow secondRow, @NonNull TextView textOperation,
      @NonNull TextView textResult, @NonNull TableRow thirdRow) {
    this.rootView = rootView;
    this.buttonClean = buttonClean;
    this.buttonDivide = buttonDivide;
    this.buttonDot = buttonDot;
    this.buttonEight = buttonEight;
    this.buttonEqual = buttonEqual;
    this.buttonFive = buttonFive;
    this.buttonFour = buttonFour;
    this.buttonMinus = buttonMinus;
    this.buttonMultiply = buttonMultiply;
    this.buttonNine = buttonNine;
    this.buttonOne = buttonOne;
    this.buttonPlus = buttonPlus;
    this.buttonSeven = buttonSeven;
    this.buttonSix = buttonSix;
    this.buttonThree = buttonThree;
    this.buttonTwo = buttonTwo;
    this.buttonZero = buttonZero;
    this.fifthRow = fifthRow;
    this.firstRow = firstRow;
    this.fourthRow = fourthRow;
    this.secondRow = secondRow;
    this.textOperation = textOperation;
    this.textResult = textResult;
    this.thirdRow = thirdRow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalculatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalculatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calculator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalculatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_clean;
      Button buttonClean = ViewBindings.findChildViewById(rootView, id);
      if (buttonClean == null) {
        break missingId;
      }

      id = R.id.button_divide;
      Button buttonDivide = ViewBindings.findChildViewById(rootView, id);
      if (buttonDivide == null) {
        break missingId;
      }

      id = R.id.button_dot;
      Button buttonDot = ViewBindings.findChildViewById(rootView, id);
      if (buttonDot == null) {
        break missingId;
      }

      id = R.id.button_eight;
      Button buttonEight = ViewBindings.findChildViewById(rootView, id);
      if (buttonEight == null) {
        break missingId;
      }

      id = R.id.button_equal;
      Button buttonEqual = ViewBindings.findChildViewById(rootView, id);
      if (buttonEqual == null) {
        break missingId;
      }

      id = R.id.button_five;
      Button buttonFive = ViewBindings.findChildViewById(rootView, id);
      if (buttonFive == null) {
        break missingId;
      }

      id = R.id.button_four;
      Button buttonFour = ViewBindings.findChildViewById(rootView, id);
      if (buttonFour == null) {
        break missingId;
      }

      id = R.id.button_minus;
      Button buttonMinus = ViewBindings.findChildViewById(rootView, id);
      if (buttonMinus == null) {
        break missingId;
      }

      id = R.id.button_multiply;
      Button buttonMultiply = ViewBindings.findChildViewById(rootView, id);
      if (buttonMultiply == null) {
        break missingId;
      }

      id = R.id.button_nine;
      Button buttonNine = ViewBindings.findChildViewById(rootView, id);
      if (buttonNine == null) {
        break missingId;
      }

      id = R.id.button_one;
      Button buttonOne = ViewBindings.findChildViewById(rootView, id);
      if (buttonOne == null) {
        break missingId;
      }

      id = R.id.button_plus;
      Button buttonPlus = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlus == null) {
        break missingId;
      }

      id = R.id.button_seven;
      Button buttonSeven = ViewBindings.findChildViewById(rootView, id);
      if (buttonSeven == null) {
        break missingId;
      }

      id = R.id.button_six;
      Button buttonSix = ViewBindings.findChildViewById(rootView, id);
      if (buttonSix == null) {
        break missingId;
      }

      id = R.id.button_three;
      Button buttonThree = ViewBindings.findChildViewById(rootView, id);
      if (buttonThree == null) {
        break missingId;
      }

      id = R.id.button_two;
      Button buttonTwo = ViewBindings.findChildViewById(rootView, id);
      if (buttonTwo == null) {
        break missingId;
      }

      id = R.id.button_zero;
      Button buttonZero = ViewBindings.findChildViewById(rootView, id);
      if (buttonZero == null) {
        break missingId;
      }

      id = R.id.fifth_row;
      TableRow fifthRow = ViewBindings.findChildViewById(rootView, id);
      if (fifthRow == null) {
        break missingId;
      }

      id = R.id.first_row;
      TableRow firstRow = ViewBindings.findChildViewById(rootView, id);
      if (firstRow == null) {
        break missingId;
      }

      id = R.id.fourth_row;
      TableRow fourthRow = ViewBindings.findChildViewById(rootView, id);
      if (fourthRow == null) {
        break missingId;
      }

      id = R.id.second_row;
      TableRow secondRow = ViewBindings.findChildViewById(rootView, id);
      if (secondRow == null) {
        break missingId;
      }

      id = R.id.text_operation;
      TextView textOperation = ViewBindings.findChildViewById(rootView, id);
      if (textOperation == null) {
        break missingId;
      }

      id = R.id.text_result;
      TextView textResult = ViewBindings.findChildViewById(rootView, id);
      if (textResult == null) {
        break missingId;
      }

      id = R.id.third_row;
      TableRow thirdRow = ViewBindings.findChildViewById(rootView, id);
      if (thirdRow == null) {
        break missingId;
      }

      return new FragmentCalculatorBinding((ConstraintLayout) rootView, buttonClean, buttonDivide,
          buttonDot, buttonEight, buttonEqual, buttonFive, buttonFour, buttonMinus, buttonMultiply,
          buttonNine, buttonOne, buttonPlus, buttonSeven, buttonSix, buttonThree, buttonTwo,
          buttonZero, fifthRow, firstRow, fourthRow, secondRow, textOperation, textResult,
          thirdRow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
